#version 330 core

in vec2 v_coord;
in vec3 v_normal;
in vec3 v_pos;

uniform vec3 ambient;
uniform vec3 specular;
uniform sampler2D diffuseMap;
uniform vec3 view_pos;
uniform vec3 light_dir; //定义为从光源射向物体的方向
uniform float k_a;
uniform float k_d;
uniform float k_s;

out vec4 color;

void main() {

    vec3 ambient_intensity = k_a * ambient;
    vec3 diffuse_intensity = k_d * texture(diffuseMap, v_coord).xyz * max(dot(v_normal, -light_dir), 0);
    vec3 r = reflect(light_dir, v_normal);
    vec3 view_dir = normalize(view_pos-v_pos);
    vec3 specular_intensity = k_s * specular * pow(max(dot(r, view_dir), 0), 2.0);

    color = vec4(ambient_intensity+diffuse_intensity+specular_intensity, 1.0);
}