#version 330 core

uniform vec3 base_color;
uniform vec3 cam_pos;

in vec2 v_uv;
in vec3 v_vertex;

out vec4 color;

bool is_equal(float a, float b)
{
    return abs(a-b) < 0.01;
}

void main() {
    float u = v_uv.x;
    float v = v_uv.y;
    vec3 up_dir = vec3(0.0, 1.0, 0.0);
    vec3 view_dir_v = normalize(vec3(0.0, cam_pos.y, cam_pos.z));
    vec3 view_dir_u = normalize(vec3(cam_pos.x, cam_pos.y, 0.0));
    float edges[3] = float[3](0.25, 0.5, 0.75);

    color = vec4(0.0, 0.0, 0.0, 0.0);
    

    vec3 color_set[6] = vec3[6](
        vec3(219/255.0, 37/255.0, 37/255.0), 
        vec3(5/255.0, 188/255.0, 230/255.0),
        vec3(245/255.0, 227/255.0, 34/255.0),
        vec3(32/255.0, 230/255.0, 58/255.0),
        vec3(188/255.0, 50/255.0, 209/255.0),
        vec3(52/255.0, 235/255.0, 219/255.0)
        );
   
    float origin_u = 0.0;
    float origin_v = 0.0;
    
    float sign_u;
    float sign_v;
    if (view_dir_u*up_dir == vec3(1.0, 0.0, 0.0))
    {
        sign_u = -1;
    }
    else
    {
        sign_u = 1;
    }
    if (view_dir_v*up_dir == vec3(1.0, 0.0, 0.0))
    {
        sign_v = -1;
    }
    else
    {
        sign_v = 1;
    }


    //三条主波浪
    for(int i=0; i<3; ++i)
    {   
        if (is_equal(v-edges[i], origin_u))
        {
            color = vec4(color_set[i], 1.0);
            return;
        }
        else if(is_equal(u-edges[i], origin_v) )
        {
            color = vec4(color_set[i+3], 1.0);
            return;
        }
        else
        {
            //每条主波浪随视角生成的副波浪
            for(int j=1; j<3; ++j)
            {   
                float _u = origin_u + (1.0-dot(up_dir, view_dir_v)) * 0.3 * j ;//* sign_u;
                float _v = origin_v + (1.0-dot(up_dir, view_dir_u)) * 0.3 * j ;//* sign_v;
                if( is_equal(v-edges[i], _u))
                {
                    color = vec4(color_set[i], 1.0);
                    return;
                }
                else if( is_equal(u-edges[i], _v))
                {
                    color = vec4(color_set[i+3], 1.0);
                    return;
                }
            }
        }
    }
}